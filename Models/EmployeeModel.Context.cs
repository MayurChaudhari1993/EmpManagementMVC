//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmpManagementMVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Neosoft_Mayur_ChaudhariEntities : DbContext
    {
        public Neosoft_Mayur_ChaudhariEntities()
            : base("name=Neosoft_Mayur_ChaudhariEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_CountryName> tbl_CountryName { get; set; }
        public virtual DbSet<tbl_EmployeeMaster> tbl_EmployeeMaster { get; set; }
        public virtual DbSet<tblpic> tblpics { get; set; }
        public virtual DbSet<tbl_State> tbl_State { get; set; }
    
        public virtual int stp_emp_CheckDuplicateEmail(string email, string operation, ObjectParameter result)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_emp_CheckDuplicateEmail", emailParameter, operationParameter, result);
        }
    
        public virtual int stp_Emp_CheckDuplicateMobileNumber(string mobNumber, string operation, ObjectParameter result)
        {
            var mobNumberParameter = mobNumber != null ?
                new ObjectParameter("MobNumber", mobNumber) :
                new ObjectParameter("MobNumber", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Emp_CheckDuplicateMobileNumber", mobNumberParameter, operationParameter, result);
        }
    
        public virtual int stp_emp_CheckDuplicatePANNumber(string panNumber, string operation, ObjectParameter result)
        {
            var panNumberParameter = panNumber != null ?
                new ObjectParameter("PanNumber", panNumber) :
                new ObjectParameter("PanNumber", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_emp_CheckDuplicatePANNumber", panNumberParameter, operationParameter, result);
        }
    
        public virtual int stp_Emp_CheckDuplicatePassportNumber(string passportNumber, string operation, ObjectParameter result)
        {
            var passportNumberParameter = passportNumber != null ?
                new ObjectParameter("PassportNumber", passportNumber) :
                new ObjectParameter("PassportNumber", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Emp_CheckDuplicatePassportNumber", passportNumberParameter, operationParameter, result);
        }
    
        public virtual int stp_Emp_DeleteEmployee(Nullable<int> employeeCode)
        {
            var employeeCodeParameter = employeeCode.HasValue ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Emp_DeleteEmployee", employeeCodeParameter);
        }
    
        public virtual ObjectResult<stp_Emp_GetCitiesByStateId_Result> stp_Emp_GetCitiesByStateId(Nullable<int> stateId)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Emp_GetCitiesByStateId_Result>("stp_Emp_GetCitiesByStateId", stateIdParameter);
        }
    
        public virtual ObjectResult<stp_Emp_GetCountryData_Result> stp_Emp_GetCountryData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Emp_GetCountryData_Result>("stp_Emp_GetCountryData");
        }
    
        public virtual ObjectResult<stp_Emp_GetEmployeeData_Result> stp_Emp_GetEmployeeData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Emp_GetEmployeeData_Result>("stp_Emp_GetEmployeeData");
        }
    
        public virtual ObjectResult<stp_Emp_GetEmployeesByFirstName_Result> stp_Emp_GetEmployeesByFirstName(string searchKeyword)
        {
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("SearchKeyword", searchKeyword) :
                new ObjectParameter("SearchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Emp_GetEmployeesByFirstName_Result>("stp_Emp_GetEmployeesByFirstName", searchKeywordParameter);
        }
    
        public virtual ObjectResult<stp_Emp_GetStatesByCountryId_Result> stp_Emp_GetStatesByCountryId(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Emp_GetStatesByCountryId_Result>("stp_Emp_GetStatesByCountryId", countryIdParameter);
        }
    
        public virtual int stp_Emp_UpdateEmployee(Nullable<int> employeeCode, string lastName, string firstName, string emailAddress, string mobileNumber, string panNumber, string passportNumber, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> dateOfJoinee, string imagename, string countryId, string stateId, string cityId, string gender, Nullable<bool> isActive)
        {
            var employeeCodeParameter = employeeCode.HasValue ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(int));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var panNumberParameter = panNumber != null ?
                new ObjectParameter("PanNumber", panNumber) :
                new ObjectParameter("PanNumber", typeof(string));
    
            var passportNumberParameter = passportNumber != null ?
                new ObjectParameter("PassportNumber", passportNumber) :
                new ObjectParameter("PassportNumber", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var dateOfJoineeParameter = dateOfJoinee.HasValue ?
                new ObjectParameter("DateOfJoinee", dateOfJoinee) :
                new ObjectParameter("DateOfJoinee", typeof(System.DateTime));
    
            var imagenameParameter = imagename != null ?
                new ObjectParameter("Imagename", imagename) :
                new ObjectParameter("Imagename", typeof(string));
    
            var countryIdParameter = countryId != null ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(string));
    
            var stateIdParameter = stateId != null ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(string));
    
            var cityIdParameter = cityId != null ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Emp_UpdateEmployee", employeeCodeParameter, lastNameParameter, firstNameParameter, emailAddressParameter, mobileNumberParameter, panNumberParameter, passportNumberParameter, dateOfBirthParameter, dateOfJoineeParameter, imagenameParameter, countryIdParameter, stateIdParameter, cityIdParameter, genderParameter, isActiveParameter);
        }
    
        public virtual int str_Emp_InsertEmployee(string firstName, string lastName, string email, string mobileNumber, string panNumber, string passportNumber, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> dateOfJoining, Nullable<int> country, Nullable<int> state, Nullable<int> city, string imagename, string gender, Nullable<bool> isActive)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var panNumberParameter = panNumber != null ?
                new ObjectParameter("PanNumber", panNumber) :
                new ObjectParameter("PanNumber", typeof(string));
    
            var passportNumberParameter = passportNumber != null ?
                new ObjectParameter("PassportNumber", passportNumber) :
                new ObjectParameter("PassportNumber", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var dateOfJoiningParameter = dateOfJoining.HasValue ?
                new ObjectParameter("DateOfJoining", dateOfJoining) :
                new ObjectParameter("DateOfJoining", typeof(System.DateTime));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            var imagenameParameter = imagename != null ?
                new ObjectParameter("Imagename", imagename) :
                new ObjectParameter("Imagename", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("str_Emp_InsertEmployee", firstNameParameter, lastNameParameter, emailParameter, mobileNumberParameter, panNumberParameter, passportNumberParameter, dateOfBirthParameter, dateOfJoiningParameter, countryParameter, stateParameter, cityParameter, imagenameParameter, genderParameter, isActiveParameter);
        }
    }
}
